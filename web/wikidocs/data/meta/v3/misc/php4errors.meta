a:2:{s:7:"current";a:6:{s:4:"date";a:1:{s:7:"created";i:1174580579;}s:7:"creator";s:12:"Chris Corbyn";s:11:"last_change";b:0;s:5:"title";s:51:"PHP4 error handling - The alternative to exceptions";s:11:"description";a:2:{s:15:"tableofcontents";a:1:{i:0;a:4:{s:3:"hid";s:51:"php4_error_handling_-_the_alternative_to_exceptions";s:5:"title";s:51:"PHP4 error handling - The alternative to exceptions";s:4:"type";s:2:"ul";s:5:"level";i:1;}}s:8:"abstract";s:503:"In PHP5, Swift throws exceptions in places, which is fairly standard practise.  Exceptions of course, can be caught and dealt with.  PHP4 however, does not support exceptions (the use of the try/catch construct).  I could have triggered errors everywhere blindly and had you use set_error_handler() from PHP, but that's too intrusive and can easily conflict with other things happening in your application.  Instead, Swift dispatches error object, much like an exception from PHP5, to an error manageâ€¦";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}}s:10:"persistent";a:3:{s:4:"date";a:1:{s:7:"created";i:1174580579;}s:7:"creator";s:12:"Chris Corbyn";s:11:"last_change";b:0;}}