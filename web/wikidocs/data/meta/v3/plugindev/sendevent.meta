a:2:{s:7:"current";a:6:{s:4:"date";a:1:{s:7:"created";i:1174581117;}s:7:"creator";s:12:"Chris Corbyn";s:11:"last_change";b:0;s:5:"title";s:23:"How to use SendListener";s:11:"description";a:2:{s:15:"tableofcontents";a:1:{i:0;a:4:{s:3:"hid";s:23:"how_to_use_sendlistener";s:5:"title";s:23:"How to use SendListener";s:4:"type";s:2:"ul";s:5:"level";i:1;}}s:8:"abstract";s:503:"A plugin which implements the Swift_Events_SendListener interface will be invoked every time Swift has sent a message to a recipient.  The event passed is of type Swift_Events_SendEvent, just like the BeforeSendListener.  In fact, the event you get passed is actually a reference to that same event you would have already seen if your plugin implements BeforeSendListener!  So if you're plugin implements both SendListener and BeforeSendListener, you could change the SendEvent before the message is â€¦";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}}s:10:"persistent";a:3:{s:4:"date";a:1:{s:7:"created";i:1174581117;}s:7:"creator";s:12:"Chris Corbyn";s:11:"last_change";b:0;}}