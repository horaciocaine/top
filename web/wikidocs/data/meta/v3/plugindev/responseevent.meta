a:2:{s:7:"current";a:6:{s:4:"date";a:1:{s:7:"created";i:1174581216;}s:7:"creator";s:12:"Chris Corbyn";s:11:"last_change";b:0;s:5:"title";s:27:"How to use ResponseListener";s:11:"description";a:2:{s:15:"tableofcontents";a:1:{i:0;a:4:{s:3:"hid";s:27:"how_to_use_responselistener";s:5:"title";s:27:"How to use ResponseListener";s:4:"type";s:2:"ul";s:5:"level";i:1;}}s:8:"abstract";s:458:"A plugin which implements Swift_Events_ResponseListener will be invoked every time Swift receives a new response from the connection.  This can come in useful if used in combination with a CommandListener because if you know what response codes to expect, you can “correct” problems by issuing the RSET command or whatever other action may be appropriate.  It probably helps to know a little about the SMTP protocol before attempting such things however.";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}}s:10:"persistent";a:3:{s:4:"date";a:1:{s:7:"created";i:1174581216;}s:7:"creator";s:12:"Chris Corbyn";s:11:"last_change";b:0;}}