a:2:{s:7:"current";a:7:{s:4:"date";a:2:{s:7:"created";i:1179411416;s:8:"modified";i:1179422417;}s:7:"creator";s:12:"Chris Corbyn";s:11:"last_change";b:0;s:11:"contributor";a:2:{i:0;N;s:6:"d11wtq";s:12:"Chris Corbyn";}s:5:"title";s:32:"Using iterators to provide lists";s:11:"description";a:2:{s:15:"tableofcontents";a:2:{i:0;a:4:{s:3:"hid";s:32:"using_iterators_to_provide_lists";s:5:"title";s:32:"Using iterators to provide lists";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:1;a:4:{s:3:"hid";s:25:"writing_your_own_iterator";s:5:"title";s:25:"Writing your own Iterator";s:4:"type";s:2:"ul";s:5:"level";i:2;}}s:8:"abstract";s:503:"As you have seen, you can make use of Swift_RecipientList to send a message to multiple recipients.  Up until now you've only seen the usage of addTo(), addCc() and addBcc().  You can completely by-pass these methods however.  Swift is provided with an iterator to loop over those addresses you have added and calling addTo() for example is simply pushing addresses onto an array.  By default Swift_RecipientList will provide an Array iterator so that the values added with addTo(), addCc() and addBcâ€¦";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}}s:10:"persistent";a:4:{s:4:"date";a:2:{s:7:"created";i:1179411416;s:8:"modified";i:1179422417;}s:7:"creator";s:12:"Chris Corbyn";s:11:"last_change";b:0;s:11:"contributor";a:2:{i:0;N;s:6:"d11wtq";s:12:"Chris Corbyn";}}}