a:136:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:0;}i:2;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1;}i:3;a:3:{i:0;s:12:"section_edit";i:1;a:4:{i:0;i:-1;i:1;i:0;i:2;i:1;i:3;s:0:"";}i:2;i:1;}i:4;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:23:"Basics of Swift_Message";i:1;i:1;i:2;i:1;}i:2;i:1;}i:5;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:6;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:38;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:39;}i:8;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:40;}i:9;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:42;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"Synopsis:";}i:2;i:44;}i:11;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:53;}i:12;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:55;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:57;}i:14;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:58;}i:15;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:60;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:114:"new Swift_Message([string subject [, mixed body [, string content-type [, string encoding [, string charset ]]]]])";}i:2;i:62;}i:17;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:176;}i:18;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:178;}i:19;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:180;}i:20;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:180;}i:21;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:148:"Unlike other email libraries, Swift is fully Object-oriented.  Message composition could be bundled into the main Swift class by all means... but it";}i:2;i:182;}i:22;a:3:{i:0;s:18:"singlequoteclosing";i:1;a:0:{}i:2;i:330;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:80:"s not.  The EasySwift class does that if you really want it.  Swift itself doesn";}i:2;i:331;}i:24;a:3:{i:0;s:18:"singlequoteclosing";i:1;a:0:{}i:2;i:411;}i:25;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:64:"t do anything to do with the creation of emails.  Instead, there";}i:2;i:412;}i:26;a:3:{i:0;s:18:"singlequoteclosing";i:1;a:0:{}i:2;i:476;}i:27;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:98:"s a subset of classes included to allow you to do that.  All of these classes share an underlying ";}i:2;i:477;}i:28;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"MIME";}i:2;i:575;}i:29;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:579;}i:30;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"API";}i:2;i:580;}i:31;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:109:" so many of the same methods are available in each class... Essentially an attachment is nothing more than a ";}i:2;i:583;}i:32;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"MIME";}i:2;i:692;}i:33;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:114:" part which encodes data, while an Embedded Image is an attachment with slightly different headers.  They are all ";}i:2;i:696;}i:34;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"MIME";}i:2;i:810;}i:35;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:45:" components, just differently configured.  It";}i:2;i:814;}i:36;a:3:{i:0;s:18:"singlequoteclosing";i:1;a:0:{}i:2;i:859;}i:37;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:49:"s advised that you familiarise yourself with the ";}i:2;i:860;}i:38;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"API";}i:2;i:909;}i:39;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:197:" documentation (in the docs/ folder of swift) for Swift_Message_Mime so that you can gain the most flexibility when composing messages.  You can do that later however; for now, just keep reading ;)";}i:2;i:912;}i:40;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1109;}i:41;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1109;}i:42;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:214:"Swift_Message is the parent document for all messages passed through the Swift class.  It contains a set of headers, and a body.  Swift_Message is set up in a way which allows other components of the message to be ";}i:2;i:1111;}i:43;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:1325;}i:44;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"attached";}i:2;i:1326;}i:45;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1334;}i:46;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:85:" to it.  That includes the textual content in a multipart message (plain text and/or ";}i:2;i:1335;}i:47;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"HTML";}i:2;i:1420;}i:48;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:314:"), embedded images, file attachments.  If you read the tutorials at the start of this documentation you will already have gathered that every time you want to send a message with swift you have to create an instance of Swift_Message.  You can modify this instance as many times as you need during script execution.";}i:2;i:1424;}i:49;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1738;}i:50;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1738;}i:51;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:105:"A basic plain text message would be created by simply passing all the values you need to the constructor.";}i:2;i:1740;}i:52;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1845;}i:53;a:3:{i:0;s:4:"code";i:1;a:2:{i:0;s:57:"
$message =& new Swift_Message("My subject", "My body");
";i:1;s:3:"php";}i:2;i:1852;}i:54;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1921;}i:55;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:"If you want a ";}i:2;i:1923;}i:56;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"HTML";}i:2;i:1937;}i:57;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" email it";}i:2;i:1941;}i:58;a:3:{i:0;s:18:"singlequoteclosing";i:1;a:0:{}i:2;i:1950;}i:59;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:28:"s not much more complicated:";}i:2;i:1951;}i:60;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1979;}i:61;a:3:{i:0;s:4:"code";i:1;a:2:{i:0;s:92:"
$message =& new Swift_Message("My subject", "My <strong>bold body</strong>", "text/html");
";i:1;s:3:"php";}i:2;i:1986;}i:62;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2090;}i:63;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:2092;}i:64;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"NOTE:";}i:2;i:2094;}i:65;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:2099;}i:66;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:" Don";}i:2;i:2101;}i:67;a:3:{i:0;s:18:"singlequoteclosing";i:1;a:0:{}i:2;i:2105;}i:68;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:"t forget that in ";}i:2;i:2106;}i:69;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"HTML";}i:2;i:2123;}i:70;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:26:" messages you want to use ";}i:2;i:2127;}i:71;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:2153;}i:72;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"<br />";}i:2;i:2155;}i:73;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:2161;}i:74;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:39:" for line breaks, not actual new lines.";}i:2;i:2163;}i:75;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2202;}i:76;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2202;}i:77;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:63:"You can add custom headers to your message by manipulating the ";}i:2;i:2204;}i:78;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:2267;}i:79;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"headers";}i:2;i:2269;}i:80;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:2276;}i:81;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:150:" property of the object.  This is an instance of the Swift_Message_Headers class - another class you should probably familiarise yourself with in the ";}i:2;i:2278;}i:82;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"API";}i:2;i:2428;}i:83;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:67:" documentation if you want to gain the most flexibility from Swift.";}i:2;i:2431;}i:84;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2498;}i:85;a:3:{i:0;s:4:"code";i:1;a:2:{i:0;s:154:"
$message =& new Swift_Message("My subject", "My body");
$message->headers->set("X-Foo", "something");
$message->headers->set("X-Bar", "something else");
";i:1;s:3:"php";}i:2;i:2505;}i:86;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2671;}i:87;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:55:"If you want to send a multipart email (i.e. one with a ";}i:2;i:2673;}i:88;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"HTML";}i:2;i:2728;}i:89;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:212:" part and an alternative plain-text part) you use a method in Swift_Message called attach().  This same method is used to add attachments, embed images and other things which form part of the message composition.";}i:2;i:2732;}i:90;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2944;}i:91;a:3:{i:0;s:4:"code";i:1;a:2:{i:0;s:190:"
$message =& new Swift_Message("My subject");
$message->attach(new Swift_Message_Part("This is plain text"));
$message->attach(new Swift_Message_Part("This is <em>HTML</em>", "text/html"));
";i:1;s:3:"php";}i:2;i:2951;}i:92;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3153;}i:93;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:"By default, Swift will use the ";}i:2;i:3155;}i:94;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"ISO";}i:2;i:3186;}i:95;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:124:"-8859-1 character set.  If it detects UTF-8 in your message it will switch to UTF-8 mode, but any other character sets will ";}i:2;i:3189;}i:96;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:3313;}i:97;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"not";}i:2;i:3315;}i:98;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:3318;}i:99;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:95:" be automatically detected and thus, you must inform the Swift_Message class of the charset you";}i:2;i:3320;}i:100;a:3:{i:0;s:18:"singlequoteclosing";i:1;a:0:{}i:2;i:3415;}i:101;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:103:"re using or you will almost certainly finish up with a garbled message being displayed in the recipient";}i:2;i:3416;}i:102;a:3:{i:0;s:18:"singlequoteclosing";i:1;a:0:{}i:2;i:3519;}i:103;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:"s mail client.";}i:2;i:3520;}i:104;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3534;}i:105;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3534;}i:106;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:3536;}i:107;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"IMPORTANT:";}i:2;i:3538;}i:108;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:3548;}i:109;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:" Don";}i:2;i:3550;}i:110;a:3:{i:0;s:18:"singlequoteclosing";i:1;a:0:{}i:2;i:3554;}i:111;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"t forget, if you";}i:2;i:3555;}i:112;a:3:{i:0;s:18:"singlequoteclosing";i:1;a:0:{}i:2;i:3571;}i:113;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:183:"re loading a message from a database or from a file on the server, you need to also use the same encoding there.  Everywhere the message will go needs to be aware of the encoding.  It";}i:2;i:3572;}i:114;a:3:{i:0;s:18:"singlequoteclosing";i:1;a:0:{}i:2;i:3755;}i:115;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:185:"s common that people build contact forms which receive non-ascii characters but they forget to set the charset of their web page to utf-8.  If the form was submitted from a web page in ";}i:2;i:3756;}i:116;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"ISO";}i:2;i:3941;}i:117;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:95:"-8859-1 and you send the message through Swift as UTF-8 you could very well create a nice mess.";}i:2;i:3944;}i:118;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4039;}i:119;a:3:{i:0;s:4:"code";i:1;a:2:{i:0;s:232:"
//At construction
$message =& new Swift_Message("Some subject", "My body", "text/plain", "8bit", "iso-8859-2");

//Or after construction
$message =& new Swift_Message("Some subject", "My body");
$message->setCharset("iso-8859-2");
";i:1;s:3:"php";}i:2;i:4046;}i:120;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4290;}i:121;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"Because it";}i:2;i:4292;}i:122;a:3:{i:0;s:18:"singlequoteclosing";i:1;a:0:{}i:2;i:4302;}i:123;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:59:"s perfectly legal to have differing character sets in each ";}i:2;i:4303;}i:124;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"MIME";}i:2;i:4362;}i:125;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:89:" part of your document (email) you should tell Each individual mime part what charset you";}i:2;i:4366;}i:126;a:3:{i:0;s:18:"singlequoteclosing";i:1;a:0:{}i:2;i:4455;}i:127;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"re using too:";}i:2;i:4456;}i:128;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4469;}i:129;a:3:{i:0;s:4:"code";i:1;a:2:{i:0;s:585:"
//At instantiation
$message =& new Swift_Message("My subject");
$message->attach(new Swift_Message_Part("Plain text part", "text/plain", "8bit", "iso-8859-2"));
$message->attach(new Swift_Message_Part("HTML <em>Mime Part</em>", "text/html", "8bit", "windows-874"));

//Or after construction
$message =& new Swift_Message("My subject");

$part1 =& new Swift_Message_Part("Plain text part");
$part1->setCharset("iso-8859-2");
$message->attach($part1);

$part2 =& new Swift_Message_Part("My HTML <em>part</em>", "text/html");
$part2->setCharset("windows-874");
$message->attach($part2);
";i:1;s:3:"php";}i:2;i:4476;}i:130;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5073;}i:131;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:283:"Swift_Message is the result of endless hours of listening to requests from users of Swift Mailer Version 2, planning, testing and refactoring.  Under the surface it does some useful things such as intelligent runtime caching of encoded data and checking for header-injection attacks.";}i:2;i:5075;}i:132;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:5358;}i:133;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5358;}i:134;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5358;}i:135;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:5358;}}