<?xml version="1.0" encoding="utf-8"?>
<!-- generator="FeedCreator 1.7.2-ppt DokuWiki" -->
<?xml-stylesheet href="http://www.swiftmailer.org/wikidocs/lib/exe/css.php?s=feed" type="text/css"?>
<rdf:RDF
    xmlns="http://purl.org/rss/1.0/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel rdf:about="http://www.swiftmailer.org/wikidocs/feed.php">
        <title>SwiftMailer Docs</title>
        <description></description>
        <link>http://www.swiftmailer.org/wikidocs/</link>
        <image rdf:resource="http://www.swiftmailer.org/wikidocs/lib/images/favicon.ico" />
       <dc:date>2009-05-13T19:53:56+00:00</dc:date>
        <items>
            <rdf:Seq>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/wiki/syntax?rev=1236564133&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/swift_message?rev=1171474473&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/composition/basics?rev=1236058882&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/tutorials/html?rev=1176875586&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/html?rev=1236058881&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v4/examples/multipart?rev=1211589594&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/embedding_images?rev=1173265512&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/start?rev=1190361270&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/tutorials/embedding_images?rev=1236058885&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/composition/multipart?rev=1236058882&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/multipart_detail?rev=1172336876&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/tips/spam?rev=1202990081&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/tips_spam?rev=1171540378&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/tutorials/start?rev=1236058885&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/start?rev=1239494836&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/tutorials/multipart?rev=1178577797&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v4?rev=1211435465&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v4/start?rev=1211596497&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/multipart?rev=1171458349&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/attachments?rev=1172337563&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v4/examples/html?rev=1236058885&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/tutorials/attachments?rev=1174579323&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/form2mail?rev=1173709141&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/uploading?rev=1171583530&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/tutorials/form2mail?rev=1236058885&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/installation/uploading?rev=1236058883&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/wiki/dokuwiki?rev=1236564133&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/swift_message_image?rev=1171481052&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/plugin_decorator?rev=1206526940&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/message_attachments?rev=1171479065&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/composition/images_embedded?rev=1236058882&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/plugins/fileembedder?rev=1179422330&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/faq/permissiondenied?rev=1236058883&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/plugins/decorator?rev=1178574627&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/composition/attachments?rev=1236058882&amp;do=diff"/>
            </rdf:Seq>
        </items>
    </channel>
    <image rdf:about="http://www.swiftmailer.org/wikidocs/lib/images/favicon.ico">
        <title>SwiftMailer Docs</title>
        <link>http://www.swiftmailer.org/wikidocs/</link>
        <url>http://www.swiftmailer.org/wikidocs/lib/images/favicon.ico</url>
    </image>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/wiki/syntax?rev=1236564133&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-09T02:02:13+00:00</dc:date>
        <title>Formatting Syntax</title>
        <link>http://www.swiftmailer.org/wikidocs/wiki/syntax?rev=1236564133&amp;do=diff</link>
        <description>doku&gt;DokuWiki supports some simple markup language, which tries to make the datafiles to be as readable as possible. This page contains all possible syntax you may use when editing the pages. Simply have a look at the source of this page by pressing the Edit this page button at the top or bottom of the page. If you want to try something, just use the playground page. The simpler markup is easily accessible via quickbuttons, too.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/swift_message?rev=1171474473&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2007-02-14T17:34:33+00:00</dc:date>
        <title>Basics of Swift_Message</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/swift_message?rev=1171474473&amp;do=diff</link>
        <description>Synopsis: new Swift_Message([string subject [, mixed body [, string content-type [, string encoding [, string charset ]]]]])

Unlike other email libraries, Swift is fully Object-oriented.  Message composition could be bundled into the main Swift class by all means... but it's not.  The EasySwift class does that if you really want it.  Swift itself doesn't do anything to do with the creation of emails.  Instead, there's a subset of classes included to allow you to do that.  All of these classes s…</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/composition/basics?rev=1236058882&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T05:41:22+00:00</dc:date>
        <title>Basics of Swift_Message</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/composition/basics?rev=1236058882&amp;do=diff</link>
        <description>Synopsis: new Swift_Message([string subject [, mixed body [, string content-type [, string encoding [, string charset ]]]]])

Unlike other email libraries, Swift is fully Object-oriented.  Message composition could be bundled into the main Swift class by all means... but it's not.  The EasySwift class does that if you really want it.  Swift itself doesn't do anything to do with the creation of emails.  Instead, there's a subset of classes included to allow you to do that.  All of these classes s…</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/tutorials/html?rev=1176875586&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2007-04-18T05:53:06+00:00</dc:date>
        <title>Sending a HTML E-Mail</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/tutorials/html?rev=1176875586&amp;do=diff</link>
        <description>Sending a HTML email with Swift is just as easy as sending a plain-text email.  You just need to tell the Message that's it's in HTML format and everything else is the same as if you were sending plain-text.  HTML has it's advantages in that it's easy to create a layout with images and styles, but not all mail clients will read it, and if you're not careful, you might be increasing the risk of being blocked as spam.  See How to (legitimately) minimize being seen as spam.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/html?rev=1236058881&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T05:41:21+00:00</dc:date>
        <title>Sending a HTML E-Mail</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/html?rev=1236058881&amp;do=diff</link>
        <description>Sending a HTML email with Swift is just as easy as sending a plain-text email.  You just need to tell the Message that's it's in HTML format and everything else is the same as if you were sending plain-text.  HTML has it's advantages in that it's easy to create a layout with images and styles, but not all mail clients will read it, and if you're not careful, you might be increasing the risk of being blocked as spam.  See How to (legitimately) minimize being seen as spam.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v4/examples/multipart?rev=1211589594&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2008-05-24T00:39:54+00:00</dc:date>
        <title>Sending a Multipart Email</title>
        <link>http://www.swiftmailer.org/wikidocs/v4/examples/multipart?rev=1211589594&amp;do=diff</link>
        <description>Sending a Multipart Email


First you need to include the “swift_required.php” file, then you create an instance of the Mailer using any of the Transports (probably Swift_SmtpTransport, Swift_SendmailTransport or Swift_MailTransport).  Then you create a a message, add some parts to it and send it with the Mailer.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/embedding_images?rev=1173265512&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2007-03-07T11:05:12+00:00</dc:date>
        <title>Embedding images in HTML E-mails</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/embedding_images?rev=1173265512&amp;do=diff</link>
        <description>Once you have learned how to add attachments to an email with Swift, and how to send HTML emails with Swift, this will probably make sense.  Using HTML it's easy to add an &lt;img .. /&gt; tag to the message and link it to a remote image on your web server.  However, you can attach the image and link to the attachment directly.  This has it benefits, as well as its drawbacks (bandwidth!).  Many mail clients now block remote images by default, so embedding images could mean that your image is more like…</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/start?rev=1190361270&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2007-09-21T07:54:30+00:00</dc:date>
        <title>Swift Mailer 3</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/start?rev=1190361270&amp;do=diff</link>
        <description>Swift Mailer 3


Version 3 is the latest release.  It offers many beneficial changes over Version 2.

Library API Reference

	*  PHP4 API Documentation
	*  PHP5 API Documentation

Tutorials

	*  Sending a basic email
	*  Sending a HTML email
	*  Sending a multipart email
	*  Personalizing recipient names
	*  Catching useful errors
	*  Sending attachments
	*  Embedding images in HTML emails
	*  Sending to multiple recipients and/or copying to recipients
	*  Sending a batch email without revealing…</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/tutorials/embedding_images?rev=1236058885&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T05:41:25+00:00</dc:date>
        <title>Embedding images in HTML E-mails</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/tutorials/embedding_images?rev=1236058885&amp;do=diff</link>
        <description>Once you have learned how to add attachments to an email with Swift, and how to send HTML emails with Swift, this will probably make sense.  Using HTML it's easy to add an &lt;img .. /&gt; tag to the message and link it to a remote image on your web server.  However, you can attach the image and link to the attachment directly.  This has it benefits, as well as its drawbacks (bandwidth!).  Many mail clients now block remote images by default, so embedding images could mean that your image is more like…</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/composition/multipart?rev=1236058882&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T05:41:22+00:00</dc:date>
        <title>Multi-Part Messages in Detail</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/composition/multipart?rev=1236058882&amp;do=diff</link>
        <description>A potentially confusing preamble


Hopefully, I won't confuse people here... if I do, just ignore this entire rambling and go straight to the bottom of the page... It's not important, it's just useful to think about.

If we imagine representing an email as XML we'd have a document which looks something like this:</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/multipart_detail?rev=1172336876&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2007-02-24T17:07:56+00:00</dc:date>
        <title>Multi-Part Messages in Detail</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/multipart_detail?rev=1172336876&amp;do=diff</link>
        <description>A potentially confusing preamble


Hopefully, I won't confuse people here... if I do, just ignore this entire rambling and go straight to the bottom of the page... It's not important, it's just useful to think about.

If we imagine representing an email as XML we'd have a document which looks something like this:</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/tips/spam?rev=1202990081&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2008-02-14T11:54:41+00:00</dc:date>
        <title>How to (legitimately) minimize being seen as spam</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/tips/spam?rev=1202990081&amp;do=diff</link>
        <description>This is a BIG topic and seemingly one that many people are quite patchy on.  I'll try to give you enough knowledge to make your own judgements and what you could do to minimize your risk.  You may finish up sad and disappointed by the end of this article though so don't build your hopes up that there's a quick-fix solution if you are being blocked as spam.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/tips_spam?rev=1171540378&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2007-02-15T11:52:58+00:00</dc:date>
        <title>How to (legitimately) minimize being seen as spam</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/tips_spam?rev=1171540378&amp;do=diff</link>
        <description>This is a BIG topic and seemingly one that many people are quite patchy on.  I'll try to give you enough knowledge to make your own judgements and what you could do to minimize your risk.  You may finish up sad and disappointed by the end of this article though so don't build your hopes up that there's a quick-fix solution if you are being blocked as spam.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/tutorials/start?rev=1236058885&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T05:41:25+00:00</dc:date>
        <title>Tutorials</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/tutorials/start?rev=1236058885&amp;do=diff</link>
        <description>Tutorials

	*  Sending a basic email
	*  Sending a HTML email
	*  Sending a multipart email
	*  Personalizing recipient names
	*  Catching useful errors
	*  Sending attachments
	*  Embedding images in HTML emails
	*  Sending to multiple recipients and/or copying to recipients
	*  Sending a batch email without revealing all addresses
	*  Sending an email from a form with Swift
	*  How to customize messages for each recipient in a batch
	*  [TODO: A mass-maling tutorial]</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/start?rev=1239494836&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2009-04-12T00:07:16+00:00</dc:date>
        <title>Swift Mailer</title>
        <link>http://www.swiftmailer.org/wikidocs/start?rev=1239494836&amp;do=diff</link>
        <description>Swift Mailer


Version 3 is now deprecated.  Unless you absolutely cannot upgrade yet, please download version 4 and use the version 4 documentation instead.

Download Version 4: &lt;http://swiftmailer.org/download&gt; 

Documentation for Version 4: &lt;http://swiftmailer.org/docs&gt;</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/tutorials/multipart?rev=1178577797&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2007-05-07T22:43:17+00:00</dc:date>
        <title>Sending a multipart email</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/tutorials/multipart?rev=1178577797&amp;do=diff</link>
        <description>When you use a mail client such as Thunderbird to send an email in both HTML and Plain-text you are asking it to send a multipart message.  This uses a standard called MIME.  The essence of what's actually being sent is that rather than just sending one body of text and one set of headers, the email contains a main set of headers which identify it as having more than one part, and the body is replaced with two smaller documents, each with their own headers and bodies.  The mail client then decid…</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v4?rev=1211435465&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2008-05-22T05:51:05+00:00</dc:date>
        <title>Swift Mailer Version 4</title>
        <link>http://www.swiftmailer.org/wikidocs/v4?rev=1211435465&amp;do=diff</link>
        <description>Swift Mailer Version 4

General Information

	*  What's changed in version 4?
	*  Server environment requirements
	*  Two editions, One project

Overview of the project structure

	*  Dependency Injection
	*  Required files
	*  Configurable preferences</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v4/start?rev=1211596497&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2008-05-24T02:34:57+00:00</dc:date>
        <title>Swift Mailer Version 4</title>
        <link>http://www.swiftmailer.org/wikidocs/v4/start?rev=1211596497&amp;do=diff</link>
        <description>Swift Mailer Version 4


NOTE this documentation is a work in progress.

General Information

	*  What's changed in version 4?
	*  Server environment requirements
	*  Two editions, One project

Overview of the project structure

	*  Dependency Injection
	*  Required files
	*  Configurable preferences</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/multipart?rev=1171458349&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2007-02-14T13:05:49+00:00</dc:date>
        <title>Sending a multipart email</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/multipart?rev=1171458349&amp;do=diff</link>
        <description>When you use a mail client such as Thunderbird to send an email in both HTML and Plain-text you are asking it to send a multipart message.  This uses a standard called MIME.  The essence of what's actually being sent is that rather than just sending one body of text and one set of headers, the email contains a main set of headers which identify it as having more than one part, and the body is replaced with two smaller documents, each with their own headers and bodies.  The mail client then decid…</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/attachments?rev=1172337563&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2007-02-24T17:19:23+00:00</dc:date>
        <title>Sending attachments</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/attachments?rev=1172337563&amp;do=diff</link>
        <description>Luckily, attachments are much like MIME parts in a multipart message, expect they are not displayed by default and are encoded in a special way.  You attach files to an email using the attach() method in swift like you do when you add MIME parts, but you use the Swift_Message_Attachment class rather than the Swift_Message_Part class.  Swift then includes the message as an attachment, rather than a textual part of the email.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v4/examples/html?rev=1236058885&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T05:41:25+00:00</dc:date>
        <title>Sending a HTML Email</title>
        <link>http://www.swiftmailer.org/wikidocs/v4/examples/html?rev=1236058885&amp;do=diff</link>
        <description>Sending a HTML Email


First you need to include the “swift_required.php” file, then you create an instance of the Mailer using any of the Transports (probably Swift_SmtpTransport, Swift_SendmailTransport or Swift_MailTransport).  Then you create a a message, specifying “text/html” as a content type and send it with the Mailer.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/tutorials/attachments?rev=1174579323&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2007-03-22T16:02:03+00:00</dc:date>
        <title>Sending attachments</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/tutorials/attachments?rev=1174579323&amp;do=diff</link>
        <description>Luckily, attachments are much like MIME parts in a multipart message, except they are not displayed by default and are encoded in a special way.  You attach files to an email using the attach() method in swift like you do when you add MIME parts, but you use the Swift_Message_Attachment class rather than the Swift_Message_Part class.  Swift then includes the message as an attachment, rather than a textual part of the email.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/form2mail?rev=1173709141&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2007-03-12T14:19:01+00:00</dc:date>
        <title>Sending an e-mail from a form with Swift</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/form2mail?rev=1173709141&amp;do=diff</link>
        <description>Ok, so Swift isn't going to write the form and handle user input for you.  I'll assume you already know how to deal with forms in PHP.  If you don't, you might want to read here first: &lt;http://www.w3schools.com/php/php_forms.asp&gt;.  The only thing Swift will do is create the email for you and send it.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/uploading?rev=1171583530&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2007-02-15T23:52:10+00:00</dc:date>
        <title>Uploading to the server</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/uploading?rev=1171583530&amp;do=diff</link>
        <description>Once the archive has been extracted you will have a new directory named something like
Swift-&lt;version&gt;

Inside this directory there are several files and folders.  You should read the README and INSTALL files before you do anything else.


  w3style:~/public_html/Swift-3.0-rc1 d11wtq$ ls -l
  total 80
  -rw-r--r--   1 d11wtq  d11wtq   1976 Dec 28 21:00 CHANGES
  -rw-r--r--   1 d11wtq  d11wtq   1351 Dec 28 21:00 INSTALL
  -rw-r--r--   1 d11wtq  d11wtq  24382 Dec 28 21:00 LICENSE
  -rw-r--r--   1 …</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/tutorials/form2mail?rev=1236058885&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T05:41:25+00:00</dc:date>
        <title>Sending an e-mail from a form with Swift</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/tutorials/form2mail?rev=1236058885&amp;do=diff</link>
        <description>Ok, so Swift isn't going to write the form and handle user input for you.  I'll assume you already know how to deal with forms in PHP.  If you don't, you might want to read here first: &lt;http://www.w3schools.com/php/php_forms.asp&gt;.  The only thing Swift will do is create the email for you and send it.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/installation/uploading?rev=1236058883&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T05:41:23+00:00</dc:date>
        <title>Uploading to the server</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/installation/uploading?rev=1236058883&amp;do=diff</link>
        <description>Once the archive has been extracted you will have a new directory named something like
Swift-&lt;version&gt;

Inside this directory there are several files and folders.  You should read the README and INSTALL files before you do anything else.


  w3style:~/public_html/Swift-3.0-rc1 d11wtq$ ls -l
  total 80
  -rw-r--r--   1 d11wtq  d11wtq   1976 Dec 28 21:00 CHANGES
  -rw-r--r--   1 d11wtq  d11wtq   1351 Dec 28 21:00 INSTALL
  -rw-r--r--   1 d11wtq  d11wtq  24382 Dec 28 21:00 LICENSE
  -rw-r--r--   1 …</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/wiki/dokuwiki?rev=1236564133&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-09T02:02:13+00:00</dc:date>
        <title>DokuWiki</title>
        <link>http://www.swiftmailer.org/wikidocs/wiki/dokuwiki?rev=1236564133&amp;do=diff</link>
        <description>[Array] DokuWiki is a standards compliant, simple to use wp&gt;Wiki, mainly aimed at creating documentation of any kind. It is targeted at developer teams, workgroups and small companies. It has a simple but powerful Formatting Syntax which makes sure the datafiles remain readable outside the Wiki and eases the creation of structured texts. All data is stored in plain text files -- no database is required.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/swift_message_image?rev=1171481052&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2007-02-14T19:24:12+00:00</dc:date>
        <title>Embedding images</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/swift_message_image?rev=1171481052&amp;do=diff</link>
        <description>When you send a HTML format email you can of course include the &lt;img /&gt; tag.  Commonly, people will do something like:

&lt;img src=&quot;http://your-host.tld/images/foo.png&quot; alt=&quot;foo&quot; /&gt;

However, because this links to a remote image you may find that your recipient does not see the image as the mail client may block remote images by default.  If you'd prefer to send the image as part of the email you need to embed it.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/plugin_decorator?rev=1206526940&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2008-03-26T10:22:20+00:00</dc:date>
        <title>Swift Message Decorator Plugin (For Customized Messages)</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/plugin_decorator?rev=1206526940&amp;do=diff</link>
        <description>Introduction to message decorating


Swift Mailer uses a caching system which operates on small units of the e-mail you compose.  If something's already been encoded/rendered and you try to encode/render it again swift reads the cache.  This offers a huge performance boost when sending the same message to many recipients.  Even once the message has been cached, you can change items such as the subject, body or transfer-encoding and Swift will use most of the message from the cache and re-render …</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/message_attachments?rev=1171479065&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2007-02-14T18:51:05+00:00</dc:date>
        <title>Dealing with Attachments</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/message_attachments?rev=1171479065&amp;do=diff</link>
        <description>Synopsis: new Swift_Message_Attachment([mixed data [, string filename [, string content-type [, string encoding [, string disposition]]]]])

An attachment yet again, another MIME document.  It's special because it contains any format of data such as a PDF, a Zip file or an executable.  In order for SMTP to proccess such data it gets encoded into a format which looks like plain-text (such as Base64).</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/composition/images_embedded?rev=1236058882&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T05:41:22+00:00</dc:date>
        <title>Embedding images</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/composition/images_embedded?rev=1236058882&amp;do=diff</link>
        <description>When you send a HTML format email you can of course include the &lt;img /&gt; tag.  Commonly, people will do something like:

&lt;img src=&quot;http://your-host.tld/images/foo.png&quot; alt=&quot;foo&quot; /&gt;

However, because this links to a remote image you may find that your recipient does not see the image as the mail client may block remote images by default.  If you'd prefer to send the image as part of the email you need to embed it.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/plugins/fileembedder?rev=1179422330&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2007-05-17T17:18:50+00:00</dc:date>
        <title>Swift Automatic File Embedding Plugin</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/plugins/fileembedder?rev=1179422330&amp;do=diff</link>
        <description>Although Swift provides tools to embed files (such as images) into your emails, the interface through which you do this may not be convenient if you have been sent an email from a source beyond your control, already containing references to images over the web.  The Swift_Plugin_FileEmbedder class scans over an email before it is sent and embeds images (and other files) according to a set of rules.  The most basic use of the class simply involves loading it.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/faq/permissiondenied?rev=1236058883&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T05:41:23+00:00</dc:date>
        <title>Why do I get a &quot;Permission Denied&quot; error when I use the SMTP connection?</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/faq/permissiondenied?rev=1236058883&amp;do=diff</link>
        <description>Why do I get a &quot;Permission Denied&quot; error when I use the SMTP connection?


This is more than likely die to a firewall rule that has been put in place by your hosting provider.  Though I have not verified this information I have also been informed that PhpSuExec can cuase problems establishing socket connections.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/plugins/decorator?rev=1178574627&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2007-05-07T21:50:27+00:00</dc:date>
        <title>Swift Message Decorator Plugin (For Customized Messages)</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/plugins/decorator?rev=1178574627&amp;do=diff</link>
        <description>Introduction to message decorating


Swift Mailer uses a caching system which operates on small units of the e-mail you compose.  If something's already been encoded/rendered and you try to encode/render it again swift reads the cache.  This offers a huge performance boost when sending the same message to many recipients.  Even once the message has been cached, you can change items such as the subject, body or transfer-encoding and Swift will use most of the message from the cache and re-render …</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/composition/attachments?rev=1236058882&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T05:41:22+00:00</dc:date>
        <title>Dealing with Attachments</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/composition/attachments?rev=1236058882&amp;do=diff</link>
        <description>Synopsis: new Swift_Message_Attachment([mixed data [, string filename [, string content-type [, string encoding [, string disposition]]]]])

An attachment yet again, another MIME document.  It's special because it contains any format of data such as a PDF, a Zip file or an executable.  In order for SMTP to proccess such data it gets encoded into a format which looks like plain-text (such as Base64).</description>
    </item>
</rdf:RDF>
