<?xml version="1.0" encoding="utf-8"?>
<!-- generator="FeedCreator 1.7.2-ppt DokuWiki" -->
<?xml-stylesheet href="http://www.swiftmailer.org/wikidocs/lib/styles/feed.css" type="text/css"?>
<rdf:RDF
    xmlns="http://purl.org/rss/1.0/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel rdf:about="http://www.swiftmailer.org/wikidocs/feed.php">
        <title>SwiftMailer Docs v3:sending</title>
        <description></description>
        <link>http://www.swiftmailer.org/wikidocs/</link>
        <image rdf:resource="http://www.swiftmailer.org/wikidocs/lib/images/favicon.ico" />
       <dc:date>2009-03-08T10:46:09+00:00</dc:date>
        <items>
            <rdf:Seq>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/sending/basics?rev=1236058884"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/sending/batch?rev=1236058884"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/sending/bounce_address?rev=1236058884"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/sending/failed_recipients?rev=1236058884"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/sending/iterators?rev=1236058884"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/sending/message_ids?rev=1236058884"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/sending/message_priority?rev=1236058884"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/sending/multiple?rev=1236058884"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/sending/read_receipts?rev=1236058884"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/sending/start?rev=1236058884"/>
            </rdf:Seq>
        </items>
    </channel>
    <image rdf:about="http://www.swiftmailer.org/wikidocs/lib/images/favicon.ico">
        <title>SwiftMailer Docs</title>
        <link>http://www.swiftmailer.org/wikidocs/</link>
        <url>http://www.swiftmailer.org/wikidocs/lib/images/favicon.ico</url>
    </image>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/sending/basics?rev=1236058884">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T05:41:24+00:00</dc:date>
        <title>Sending a message to a recipient</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/sending/basics?rev=1236058884</link>
        <description>Sending messages in Swift is extremely simple.  You call the send() method, which only has 3 parameters.  One is the message, one is the recipient, and the other is the sender.


$swift =&amp; new Swift(new Swift_Connection_SMTP(&quot;host.tld&quot;));

$message =&amp; new Swift_Message(&quot;My subject&quot;, &quot;My body&quot;);

$sent = $swift-&gt;send($message, &quot;recipient@address.tld&quot;, &quot;sender@address.tld&quot;);
echo &quot;Sent to $sent recipients&quot;;</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/sending/batch?rev=1236058884">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T05:41:24+00:00</dc:date>
        <title>Sending a batch email or newsletter</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/sending/batch?rev=1236058884</link>
        <description>When you send out an email marketing campaign, newsletter or any other type of batch email you don’t particularly want to reveal everybody’s address to the recipients.  One nasty hack is to Bcc all the recipients and leave the To: field undisclosed.  However, Swift provides a method specially for the purpose of sending out batch emails.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/sending/bounce_address?rev=1236058884">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T05:41:24+00:00</dc:date>
        <title>Setting the Bounce detect, or Return-path address</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/sending/bounce_address?rev=1236058884</link>
        <description>When using SMTP, you don’t always know if the message is going to reach the recipient.  If something goes wrong and you’re really lucky you’ll know about it at SMTP time if the server reports an error; if you’re not so lucky, but not completely in the dark, you’ll receive an email from a different server saying that something went wrong; and if you’re completely unlucky, you’ll just be left wondering why you never got a response from the recipient.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/sending/failed_recipients?rev=1236058884">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T05:41:24+00:00</dc:date>
        <title>Dealing with failed recipients</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/sending/failed_recipients?rev=1236058884</link>
        <description>SMTP does occassionally reject recipient addresses due to malformity, domain conflicts, DNS issues and other problems.  If you want to track who got rejected you should enable Swift’s logging facility so that these failures can be collected.  The failed addresses will be stored in $swift-&gt;log-&gt;getFailedRecipients() as an array.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/sending/iterators?rev=1236058884">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T05:41:24+00:00</dc:date>
        <title>Using iterators to provide lists</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/sending/iterators?rev=1236058884</link>
        <description>As you have seen, you can make use of Swift_RecipientList to send a message to multiple recipients.  Up until now you’ve only seen the usage of addTo(), addCc() and addBcc().  You can completely by-pass these methods however.  Swift is provided with an iterator to loop over those addresses you have added and calling addTo() for example is simply pushing addresses onto an array.  By default Swift_RecipientList will provide an Array iterator so that the values added with addTo(), addCc() and add…</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/sending/message_ids?rev=1236058884">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T05:41:24+00:00</dc:date>
        <title>Working with Message-IDs</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/sending/message_ids?rev=1236058884</link>
        <description>Emails can contain a unique ID known as a message ID.  As of Swift version 3.1.4, Swift will generate this ID for you on a per-send basis (i.e. when you send a message an ID is created for it).  If you want to get the message ID yourself then you should override what Swift does and call the generateId() method of Swift_Message:</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/sending/message_priority?rev=1236058884">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T05:41:24+00:00</dc:date>
        <title>Changing the message priority</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/sending/message_priority?rev=1236058884</link>
        <description>The message priority does little more than flag the message in the recipients INBOX as being important or not.  To set the priority, you make a change to the message itself.  You can provide an integer ranging from 1 (High) to 5 (Low) to indicate the priority.  By default, no priority is indicated which equates to a priority of 3 (Normal).  The class constants used in the example below map to the relevant integer values of the priority.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/sending/multiple?rev=1236058884">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T05:41:24+00:00</dc:date>
        <title>Sending to mulitple recipients</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/sending/multiple?rev=1236058884</link>
        <description>Sending to multiple recipients, or including Cc and Bcc recipients is handled by passing an instance of Swift_RecipientList as the recipient parameter in send().

Swift_RecipientList() contains the methods addTo(), addCc() and addBcc() along with removeTo(), removeCc() etc.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/sending/read_receipts?rev=1236058884">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T05:41:24+00:00</dc:date>
        <title>Requesting a Read-Receipt</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/sending/read_receipts?rev=1236058884</link>
        <description>Read-Receipts are not very reliable since most emails clients will either prompt, or block them.  However, if you do desire to request a read-receipt you should set this in the message itself, before sending:


$message =&amp; new Swift_Message(&quot;My subject&quot;, &quot;My body&quot;);
$message-&gt;requestReadReceipt(&quot;your@address.tld&quot;);</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/sending/start?rev=1236058884">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T05:41:24+00:00</dc:date>
        <title>v3:sending:start</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/sending/start?rev=1236058884</link>
        <description></description>
    </item>
</rdf:RDF>
