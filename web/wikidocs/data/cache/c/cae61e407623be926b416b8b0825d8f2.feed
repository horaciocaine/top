<?xml version="1.0" encoding="utf-8"?>
<!-- generator="FeedCreator 1.7.2-ppt DokuWiki" -->
<?xml-stylesheet href="http://www.swiftmailer.org/wikidocs/lib/exe/css.php?s=feed" type="text/css"?>
<rdf:RDF
    xmlns="http://purl.org/rss/1.0/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel rdf:about="http://www.swiftmailer.org/wikidocs/feed.php">
        <title>SwiftMailer Docs</title>
        <description></description>
        <link>http://www.swiftmailer.org/wikidocs/</link>
        <image rdf:resource="http://www.swiftmailer.org/wikidocs/lib/images/favicon.ico" />
       <dc:date>2010-11-05T13:02:35+01:00</dc:date>
        <items>
            <rdf:Seq>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/misc_caching?rev=1236058881&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/misc/caching?rev=1236058883&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v4/caching/overview?rev=1236058885&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v4/caching/array?rev=1236058885&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/tips/memory?rev=1208812707&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/tips_memory?rev=1172337419&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/tutorials/form2mail?rev=1236058885&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/form2mail?rev=1173709141&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v4/start?rev=1211596497&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/plugins/decorator?rev=1178574627&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v4/caching/disk?rev=1236058885&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/plugin_decorator?rev=1206526940&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/multipart_detail?rev=1172336876&amp;do=diff"/>
                <rdf:li rdf:resource="http://www.swiftmailer.org/wikidocs/v3/composition/multipart?rev=1236058882&amp;do=diff"/>
            </rdf:Seq>
        </items>
    </channel>
    <image rdf:about="http://www.swiftmailer.org/wikidocs/lib/images/favicon.ico">
        <title>SwiftMailer Docs</title>
        <link>http://www.swiftmailer.org/wikidocs/</link>
        <url>http://www.swiftmailer.org/wikidocs/lib/images/favicon.ico</url>
    </image>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/misc_caching?rev=1236058881&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T06:41:21+01:00</dc:date>
        <title>Swift's Runtime Cache</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/misc_caching?rev=1236058881&amp;do=diff</link>
        <description>Swift Mailer incorporates a runtime cache to help speed things up a lot.  Composing emails is a tough business.  You need to encode files, correct line endings, translate to formats laid out in the RFCs.  It's therefore easier if you can just do this once and once it's been done, re-use the results.  Swift caches various pieces of data (computed strings) on various different levels whilst it composes messages.  This is all handled by an abstracted caching layer.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/misc/caching?rev=1236058883&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T06:41:23+01:00</dc:date>
        <title>Swift's Runtime Cache</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/misc/caching?rev=1236058883&amp;do=diff</link>
        <description>Swift Mailer incorporates a runtime cache to help speed things up a lot.  Composing emails is a tough business.  You need to encode files, correct line endings, translate to formats laid out in the RFCs.  It's therefore easier if you can just do this once and once it's been done, re-use the results.  Swift caches various pieces of data (computed strings) on various different levels whilst it composes messages.  This is all handled by an abstracted caching layer.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v4/caching/overview?rev=1236058885&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T06:41:25+01:00</dc:date>
        <title>Caching Strategies - Overview</title>
        <link>http://www.swiftmailer.org/wikidocs/v4/caching/overview?rev=1236058885&amp;do=diff</link>
        <description>Caching Strategies - Overview


Generating compliant MIME data (i.e. the email itself) is thirsty work, especially for non-ascii character sets.  Swift Mailer caches data where it can so that when sending the same email to lot of recipients things run a little faster.  There are two caching strategies offered by default in Swift Mailer.  One uses a PHP array to hold cached data.  The other writes data to disk.  It would be easy to extend Swift to support a new cache type if you have a reason to â€¦</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v4/caching/array?rev=1236058885&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T06:41:25+01:00</dc:date>
        <title>The Array Cache</title>
        <link>http://www.swiftmailer.org/wikidocs/v4/caching/array?rev=1236058885&amp;do=diff</link>
        <description>The Array Cache


It's not advisable to use array caching if a writable directory exists on the filesystem (even /tmp).  However, the presence of a directory which PHP can write to is often not available.  Using the array cache will work on all systems without any specific cache settings.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/tips/memory?rev=1208812707&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2008-04-21T23:18:27+01:00</dc:date>
        <title>Keep memory down to a minimum</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/tips/memory?rev=1208812707&amp;do=diff</link>
        <description>If you're sending out a large batch of emails (in the thousands of recipients) you probably need to think slightly more about your approach to delivering the emails.  In general, if you can send two emails in a loop using X amount of memory, you should only need a negligible amount more memory to send out ten thousand.  Obviously you need more time too!</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/tips_memory?rev=1172337419&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2007-02-24T18:16:59+01:00</dc:date>
        <title>Keep memory down to a minimum</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/tips_memory?rev=1172337419&amp;do=diff</link>
        <description>If you're sending out a large batch of emails (in the thousands of recipients) you probably need to think slightly more about your approach to delivering the emails.  In general, if you can send two emails in a loop using X amount of memory, you should only need a negligible amount more memory to send out ten thousand.  Obviously you need more time too!</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/tutorials/form2mail?rev=1236058885&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T06:41:25+01:00</dc:date>
        <title>Sending an e-mail from a form with Swift</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/tutorials/form2mail?rev=1236058885&amp;do=diff</link>
        <description>Ok, so Swift isn't going to write the form and handle user input for you.  I'll assume you already know how to deal with forms in PHP.  If you don't, you might want to read here first: &lt;http://www.w3schools.com/php/php_forms.asp&gt;.  The only thing Swift will do is create the email for you and send it.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/form2mail?rev=1173709141&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2007-03-12T15:19:01+01:00</dc:date>
        <title>Sending an e-mail from a form with Swift</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/form2mail?rev=1173709141&amp;do=diff</link>
        <description>Ok, so Swift isn't going to write the form and handle user input for you.  I'll assume you already know how to deal with forms in PHP.  If you don't, you might want to read here first: &lt;http://www.w3schools.com/php/php_forms.asp&gt;.  The only thing Swift will do is create the email for you and send it.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v4/start?rev=1211596497&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2008-05-24T04:34:57+01:00</dc:date>
        <title>Swift Mailer Version 4</title>
        <link>http://www.swiftmailer.org/wikidocs/v4/start?rev=1211596497&amp;do=diff</link>
        <description>Swift Mailer Version 4


NOTE this documentation is a work in progress.

General Information

	*  What's changed in version 4?
	*  Server environment requirements
	*  Two editions, One project

Overview of the project structure

	*  Dependency Injection
	*  Required files
	*  Configurable preferences</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/plugins/decorator?rev=1178574627&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2007-05-07T23:50:27+01:00</dc:date>
        <title>Swift Message Decorator Plugin (For Customized Messages)</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/plugins/decorator?rev=1178574627&amp;do=diff</link>
        <description>Introduction to message decorating


Swift Mailer uses a caching system which operates on small units of the e-mail you compose.  If something's already been encoded/rendered and you try to encode/render it again swift reads the cache.  This offers a huge performance boost when sending the same message to many recipients.  Even once the message has been cached, you can change items such as the subject, body or transfer-encoding and Swift will use most of the message from the cache and re-render â€¦</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v4/caching/disk?rev=1236058885&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T06:41:25+01:00</dc:date>
        <title>The Disk Cache</title>
        <link>http://www.swiftmailer.org/wikidocs/v4/caching/disk?rev=1236058885&amp;do=diff</link>
        <description>The Disk Cache


The Disk cache is enabled by default, provided sys_get_temp_dir() exists.  Using disk caching provides speed improvements when sending large attachments and it provides a consistent level of memory use (roughly 1.68 MiB).

To explicitly use disk caching place these lines anywhere before you send any messages.  There is no need to use this code in the same script multiple times; only call it once.</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/plugin_decorator?rev=1206526940&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2008-03-26T11:22:20+01:00</dc:date>
        <title>Swift Message Decorator Plugin (For Customized Messages)</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/plugin_decorator?rev=1206526940&amp;do=diff</link>
        <description>Introduction to message decorating


Swift Mailer uses a caching system which operates on small units of the e-mail you compose.  If something's already been encoded/rendered and you try to encode/render it again swift reads the cache.  This offers a huge performance boost when sending the same message to many recipients.  Even once the message has been cached, you can change items such as the subject, body or transfer-encoding and Swift will use most of the message from the cache and re-render â€¦</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/multipart_detail?rev=1172336876&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2007-02-24T18:07:56+01:00</dc:date>
        <title>Multi-Part Messages in Detail</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/multipart_detail?rev=1172336876&amp;do=diff</link>
        <description>A potentially confusing preamble


Hopefully, I won't confuse people here... if I do, just ignore this entire rambling and go straight to the bottom of the page... It's not important, it's just useful to think about.

If we imagine representing an email as XML we'd have a document which looks something like this:</description>
    </item>
    <item rdf:about="http://www.swiftmailer.org/wikidocs/v3/composition/multipart?rev=1236058882&amp;do=diff">
        <dc:format>text/html</dc:format>
        <dc:date>2009-03-03T06:41:22+01:00</dc:date>
        <title>Multi-Part Messages in Detail</title>
        <link>http://www.swiftmailer.org/wikidocs/v3/composition/multipart?rev=1236058882&amp;do=diff</link>
        <description>A potentially confusing preamble


Hopefully, I won't confuse people here... if I do, just ignore this entire rambling and go straight to the bottom of the page... It's not important, it's just useful to think about.

If we imagine representing an email as XML we'd have a document which looks something like this:</description>
    </item>
</rdf:RDF>
