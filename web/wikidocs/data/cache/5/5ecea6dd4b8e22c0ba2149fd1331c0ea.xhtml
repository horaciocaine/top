


<h1><a name="how_to_use_beforecommandlistener" id="how_to_use_beforecommandlistener">How to use BeforeCommandListener</a></h1>
<div class="level1">

<p>
 A plugin which implements the Swift_Events_BeforeCommandListener interface will be invoked every time Swift is about to issue an <acronym title="Simple Mail Transfer Protocol">SMTP</acronym> command.  The plugin will have access to the command being executed and any changes made to the command inside the plugin will be executed at the time when the command would normally execute.  Plugins which implement either the CommandListener or BeforeCommandListener are most likely listening for those event by means of tracking the progress of sending an email rather than watching the actual commands being issued, but either way, <em>every</em> command that&rsquo;s sent to the <acronym title="Simple Mail Transfer Protocol">SMTP</acronym> server will be first passed via any BeforeCommandListener&rsquo;s.
</p>

<p>
The interface looks like this:
</p>
<pre class="code php"><span class="coMULTI">/**
 * Contains the list of methods a plugin requiring the use of a CommandEvent, before it is sent must implement
 * @package Swift_Events
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 */</span>
<span class="kw2">interface</span> Swift_Events_BeforeCommandListener <span class="kw2">extends</span> Swift_Events_Listener
<span class="br0">&#123;</span>
	<span class="coMULTI">/**
	 * Executes just before Swift sends a command
	 * @param Swift_Events_CommandEvent Information about the being command sent
	 */</span>
	<span class="kw2">public</span> <span class="kw2">function</span> beforeCommandSent<span class="br0">&#40;</span>Swift_Events_CommandEvent <span class="re0">$e</span><span class="br0">&#41;</span>;
<span class="br0">&#125;</span></pre>
<p>
If you&rsquo;re going to make use of this plugin, I&rsquo;ll assume you understand a little about the <acronym title="Simple Mail Transfer Protocol">SMTP</acronym> protocol.  If you don&rsquo;t have the foggiest clue about how <acronym title="Simple Mail Transfer Protocol">SMTP</acronym> works then implementing the CommandListener or BeforeCommandListener probably isn&rsquo;t going to be of much use to you.  Neither will the following example.
</p>

<p>
The example given below shows how you could use a BeforeCommandListener to copy <strong>all</strong> emails sent to yourself.  For those not familiar with <acronym title="Simple Mail Transfer Protocol">SMTP</acronym>, the &ldquo;DATA&rdquo; command is the last command to be issued before the email is sent, and the &ldquo;RCPT TO&rdquo; commands are the commands which specify the recipients.
</p>
<pre class="code php"><span class="kw2">class</span> CopyEmailsToSender implements Swift_Events_BeforeCommandListener
<span class="br0">&#123;</span>
    protected <span class="re0">$sender</span>;
    
    <span class="kw2">public</span> <span class="kw2">function</span> __construct<span class="br0">&#40;</span><span class="re0">$sender</span><span class="br0">&#41;</span>
    <span class="br0">&#123;</span>
        <span class="re0">$this</span>-&gt;<span class="me1">setSender</span><span class="br0">&#40;</span><span class="re0">$sender</span><span class="br0">&#41;</span>;
    <span class="br0">&#125;</span>
&nbsp;
    <span class="kw2">public</span> <span class="kw2">function</span> setSender<span class="br0">&#40;</span>Swift_Address <span class="re0">$sender</span><span class="br0">&#41;</span>
    <span class="br0">&#123;</span>
        <span class="re0">$this</span>-&gt;<span class="me1">sender</span> = <span class="re0">$sender</span>;
    <span class="br0">&#125;</span>
    
    <span class="kw2">public</span> <span class="kw2">function</span> getSender<span class="br0">&#40;</span><span class="br0">&#41;</span>
    <span class="br0">&#123;</span>
        <span class="kw1">return</span> <span class="re0">$this</span>-&gt;<span class="me1">sender</span>;
    <span class="br0">&#125;</span>
    
    <span class="kw2">public</span> <span class="kw2">function</span> beforeCommandSent<span class="br0">&#40;</span>Swift_Events_CommandEvent <span class="re0">$e</span><span class="br0">&#41;</span>
    <span class="br0">&#123;</span>
        <span class="re0">$command</span> = <span class="re0">$e</span>-&gt;<span class="me1">getString</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;
        <span class="kw1">if</span> <span class="br0">&#40;</span><span class="re0">$command</span> == <span class="st0">&quot;DATA&quot;</span><span class="br0">&#41;</span>
        <span class="br0">&#123;</span>
            <span class="re0">$swift</span> = <span class="re0">$e</span>-&gt;<span class="me1">getSwift</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;
            <span class="re0">$swift</span>-&gt;<span class="me1">command</span><span class="br0">&#40;</span><span class="st0">&quot;RCPT TO: &quot;</span> . <span class="re0">$this</span>-&gt;<span class="me1">getSender</span><span class="br0">&#40;</span><span class="br0">&#41;</span>-&gt;<span class="me1">build</span><span class="br0">&#40;</span><span class="kw2">true</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;
        <span class="br0">&#125;</span>
    <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre>
</div>
