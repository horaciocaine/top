


<h1><a name="writing_a_connectlistener" id="writing_a_connectlistener">Writing a ConnectListener</a></h1>
<div class="level1">

<p>

As the name suggests, a ConnectListener will be notified every time Swift connects to the <acronym title="Simple Mail Transfer Protocol">SMTP</acronym> server or other MTA.  A plugin which implements the Swift_Events_ConnectListener interface will be passed an instance of Swift_Events_ConnectEvent when a connection is established.
</p>

<p>
The interface for a plugin which will be a ConnectListener is shown below:
</p>
<pre class="code php"><span class="co4">/**
 * Contains the list of methods a plugin requiring the use of a ConnectEvent must implement
 * @package Swift_Events
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 */</span>
<span class="kw2">interface</span> Swift_Events_ConnectListener <span class="kw2">extends</span> Swift_Events_Listener
<span class="br0">&#123;</span>
	<span class="co4">/**
	 * Executes when Swift initiates a connection
	 * @param Swift_Events_ConnectEvent Information about the connection
	 */</span>
	<span class="kw2">public</span> <span class="kw2">function</span> connectPerformed<span class="br0">&#40;</span>Swift_Events_ConnectEvent <span class="re0">$e</span><span class="br0">&#41;</span>;
<span class="br0">&#125;</span></pre>
<p>
If you&#039;re using PHP5, you must declare that your plugin implements this interface.  For PHP4, all you need to do is make sure the method connectPerformed($e) exists in you plugin.  You cannot using type-checking in PHP4.
</p>

<p>
In PHP5, your plugin would be declared like this:
</p>
<pre class="code php"><span class="kw2">class</span> MyPlugin implements Swift_Events_ConnectListener
<span class="br0">&#123;</span>
    <span class="kw2">public</span> <span class="kw2">function</span> connectPerformed<span class="br0">&#40;</span>Swift_Events_ConnectEvent <span class="re0">$e</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre>
<p>
In PHP4, that simply becomes:
</p>
<pre class="code php"><span class="kw2">class</span> MyPlugin <span class="kw2">extends</span> Swift_Events_Listener
<span class="br0">&#123;</span>
    <span class="kw2">function</span> connectPerformed<span class="br0">&#40;</span><span class="sy0">&amp;</span><span class="re0">$e</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre>
<p>
Let&#039;s take the example that you want to add a custom line to the log whenever Swift connects.  All event objects have a common method of getSwift() which returns a reference to the instance of Swift which generated the event.  Working with Swift here is just like working with it anywhere else, so adding a line to the log at connect is a pretty basic example.
</p>
<pre class="code php"><span class="kw2">class</span> ConnectLoggerPlugin implements Swift_Events_ConnectListener
<span class="br0">&#123;</span>
    <span class="kw2">public</span> <span class="kw2">function</span> connectPerformed<span class="br0">&#40;</span>swift_Events_ConnectEvent <span class="re0">$e</span><span class="br0">&#41;</span>
    <span class="br0">&#123;</span>
        <span class="re0">$swift</span> <span class="sy0">=</span> <span class="re0">$e</span><span class="sy0">-&gt;</span><span class="me1">getSwift</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;
        <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy0">!</span><span class="br0">&#40;</span><span class="re0">$enabled</span> <span class="sy0">=</span> <span class="re0">$swift</span><span class="sy0">-&gt;</span><span class="me1">log</span><span class="sy0">-&gt;</span><span class="me1">isEnabled</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
            <span class="re0">$swift</span><span class="sy0">-&gt;</span><span class="me1">log</span><span class="sy0">-&gt;</span><span class="me1">enable</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;
        <span class="re0">$swift</span><span class="sy0">-&gt;</span><span class="me1">log</span><span class="sy0">-&gt;</span><span class="me1">add</span><span class="br0">&#40;</span><span class="st0">&quot;Swift connected and this plugin saw it happen!&quot;</span><span class="br0">&#41;</span>;
        <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy0">!</span><span class="re0">$enabled</span><span class="br0">&#41;</span> <span class="re0">$swift</span><span class="sy0">-&gt;</span><span class="me1">log</span><span class="sy0">-&gt;</span><span class="me1">disable</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;
    <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre>
<p>
You need to remember that in PHP4, you will absolutely need to use the reference operator or you&#039;ll be working with a copy of Swift and it won&#039;t work.
</p>

<p>
You can also get a copy of the connection object that established the connection by calling:
</p>
<pre class="code php"><span class="re0">$connection</span> <span class="sy0">=</span> <span class="re0">$e</span><span class="sy0">-&gt;</span><span class="me1">getConnection</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;</pre>
<p>
It&#039;s unlikely you&#039;d ever want to tamper with the connection, but the ability exists if you really do.
</p>

</div>
