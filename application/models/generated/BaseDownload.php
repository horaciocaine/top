<?php

/**
 * BaseDownload
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $filename
 * @property integer $time_created
 * @property integer $filesize
 * @property enum $source
 * @property boolean $revoked
 * @property boolean $stable
 * @property string $version_number
 * @property DownloadEvent $DownloadEvent
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 5441 2009-01-30 22:58:43Z jwage $
 */
abstract class BaseDownload extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('download');
        $this->hasColumn('id', 'integer', null, array('type' => 'integer', 'primary' => true, 'autoincrement' => true));
        $this->hasColumn('filename', 'string', 255, array('type' => 'string', 'length' => '255'));
        $this->hasColumn('time_created', 'integer', null, array('type' => 'integer'));
        $this->hasColumn('filesize', 'integer', null, array('type' => 'integer'));
        $this->hasColumn('source', 'enum', null, array('type' => 'enum', 'values' => array(0 => 'sourceforge', 1 => 'googlecode', 2 => 'github')));
        $this->hasColumn('revoked', 'boolean', null, array('type' => 'boolean', 'notnull' => true));
        $this->hasColumn('stable', 'boolean', null, array('type' => 'boolean', 'default' => true, 'notnull' => true));
        $this->hasColumn('version_number', 'string', 255, array('type' => 'string', 'length' => '255'));


        $this->index('time_index', array('fields' => array(0 => 'time_created')));
        $this->index('revoke_index', array('fields' => array(0 => 'revoked')));
        $this->index('version_index', array('fields' => array(0 => 'version_number(18)')));
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        $this->hasOne('DownloadEvent', array('local' => 'id',
                                             'foreign' => 'download_id'));
    }

  public function getId($load = true)
  {
    return $this->get('id', $load);
  }

  public function setId($id, $load = true)
  {
    return $this->set('id', $id, $load);
  }

  public function getFilename($load = true)
  {
    return $this->get('filename', $load);
  }

  public function setFilename($filename, $load = true)
  {
    return $this->set('filename', $filename, $load);
  }

  public function getTimeCreated($load = true)
  {
    return $this->get('time_created', $load);
  }

  public function setTimeCreated($time_created, $load = true)
  {
    return $this->set('time_created', $time_created, $load);
  }

  public function getFilesize($load = true)
  {
    return $this->get('filesize', $load);
  }

  public function setFilesize($filesize, $load = true)
  {
    return $this->set('filesize', $filesize, $load);
  }

  public function getSource($load = true)
  {
    return $this->get('source', $load);
  }

  public function setSource($source, $load = true)
  {
    return $this->set('source', $source, $load);
  }

  public function getRevoked($load = true)
  {
    return $this->get('revoked', $load);
  }

  public function setRevoked($revoked, $load = true)
  {
    return $this->set('revoked', $revoked, $load);
  }

  public function getStable($load = true)
  {
    return $this->get('stable', $load);
  }

  public function setStable($stable, $load = true)
  {
    return $this->set('stable', $stable, $load);
  }

  public function getVersionNumber($load = true)
  {
    return $this->get('version_number', $load);
  }

  public function setVersionNumber($version_number, $load = true)
  {
    return $this->set('version_number', $version_number, $load);
  }

  public function getDownloadEvent($load = true)
  {
    return $this->get('DownloadEvent', $load);
  }

  public function setDownloadEvent($DownloadEvent, $load = true)
  {
    return $this->set('DownloadEvent', $DownloadEvent, $load);
  }

}